components:
  schemas:
    EnderecoCreate:
      properties:
        bairro:
          type: string
        cep:
          type: string
        cidade:
          type: string
        complemento:
          type: string
        estado:
          type: string
        id_usuario:
          type: string
        numero:
          type: string
        rua:
          type: string
      required:
      - id_usuario
      - rua
      - numero
      - bairro
      - cidade
      - estado
      - cep
      type: object
    EnderecoUpdate:
      properties:
        bairro:
          type: string
        cep:
          type: string
        cidade:
          type: string
        complemento:
          type: string
        estado:
          type: string
        numero:
          type: string
        rua:
          type: string
      required:
      - rua
      - numero
      - bairro
      - cidade
      - estado
      - cep
      type: object
    ProdutoCreate:
      properties:
        categoria:
          type: string
        codigo:
          type: string
        descricao:
          type: string
        imagem:
          type: string
        nome:
          type: string
        preco:
          type: number
      required:
      - codigo
      - nome
      - preco
      type: object
    ProdutoUpdate:
      properties:
        categoria:
          type: string
        codigo:
          type: string
        descricao:
          type: string
        imagem:
          type: string
        nome:
          type: string
        preco:
          type: number
      required:
      - codigo
      - nome
      - preco
      type: object
    UsuarioLogin:
      properties:
        email:
          format: email
          type: string
        senha:
          type: string
      required:
      - email
      - senha
      type: object
    UsuarioRegister:
      properties:
        cpf:
          type: string
        data_nascimento:
          format: date
          type: string
        email:
          format: email
          type: string
        foto_perfil:
          type: string
        genero:
          type: string
        nivel_acesso:
          type: string
        nome_completo:
          type: string
        senha:
          type: string
        telefone:
          type: string
      required:
      - nome_completo
      - email
      - senha
      type: object
info:
  description: Documentação completa da API com autenticação JWT, gerenciamento de
    usuários, produtos e endereços.
  title: Backend API
  version: 1.0.0
openapi: 3.0.0
paths:
  /enderecos:
    get:
      responses:
        '200':
          description: Lista de endereços
      summary: Listar todos os endereços
      tags:
      - Endereço
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnderecoCreate'
      responses:
        '201':
          description: Endereço criado
      summary: Criar novo endereço
      tags:
      - Endereço
  /enderecos/usuario/{id_usuario}:
    get:
      parameters:
      - in: path
        name: id_usuario
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Lista de endereços do usuário
      summary: Listar endereços por usuário
      tags:
      - Endereço
  /enderecos/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Endereço excluído
      security:
      - bearerAuth: []
      summary: Excluir endereço
      tags:
      - Endereço
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Endereço encontrado
      summary: Buscar endereço por ID
      tags:
      - Endereço
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnderecoUpdate'
      responses:
        '200':
          description: Endereço atualizado
      security:
      - bearerAuth: []
      summary: Atualizar endereço
      tags:
      - Endereço
  /produtos:
    get:
      responses:
        '200':
          description: Lista de produtos
      summary: Listar todos os produtos
      tags:
      - Produto
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoCreate'
      responses:
        '201':
          description: Produto criado
      summary: Criar novo produto
      tags:
      - Produto
  /produtos/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Produto removido
      security:
      - bearerAuth: []
      summary: Remover produto
      tags:
      - Produto
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoUpdate'
      responses:
        '200':
          description: Produto atualizado
      security:
      - bearerAuth: []
      summary: Atualizar produto
      tags:
      - Produto
  /usuarios:
    get:
      responses:
        '200':
          description: Lista de usuários
      security:
      - bearerAuth: []
      summary: Listar todos os usuários
      tags:
      - Usuário
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioRegister'
        required: true
      responses:
        '201':
          description: Usuário criado com sucesso
      summary: Criar novo usuário
      tags:
      - Usuário
  /usuarios/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioLogin'
        required: true
      responses:
        '200':
          description: Autenticação bem-sucedida
        '401':
          description: Credenciais inválidas
      summary: Autenticar usuário
      tags:
      - Usuário
  /usuarios/{id}:
    delete:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Usuário removido
      security:
      - bearerAuth: []
      summary: Remover usuário
      tags:
      - Usuário
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Usuário atualizado
      security:
      - bearerAuth: []
      summary: Atualizar usuário
      tags:
      - Usuário
  /usuarios/{id}/nivel:
    put:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                nivel_acesso:
                  type: string
              required:
              - nivel_acesso
              type: object
      responses:
        '200':
          description: Nível atualizado
      security:
      - bearerAuth: []
      summary: Atualizar nível de acesso
      tags:
      - Usuário
servers:
- url: https://backend-lambda.onrender.com
tags:
- description: Operações relacionadas a usuários
  name: Usuário
- description: Operações relacionadas a endereços
  name: Endereço
- description: Operações relacionadas a produtos
  name: Produto
